version: 2
jobs:
  build:
    docker:
      - image: fpco/stack-build:lts
    environment:
      BRANCH: master
      TARGET_REPO: calwoo/calwoo.github.io.git
    steps:
      - checkout
      - restore_cache:
          name: Restore Cached Dependencies
          keys:
            # find a cache for the same stack.yaml
            - stack-{{ .Branch }}-{{ checksum "stack.yaml" }}
            # when missing reuse from the same branch
            - stack-{{ .Branch }}-
            # when missing reuse the latest cache
            - stack-
      - run:
          name: Resolve/Update Dependencies
          command: |
            stack setup
            stack build --dependencies-only
      - save_cache:
          name: Cache Dependencies
          key: stack-{{ .Branch }}-{{ checksum "stack.yaml" }}
          paths:
            - ~/.stack
            - ./.stack-work
      - run:
         name: Build Site App
          command: stack build --pedantic
      - run:
          name: Generate Static Site
          command: stack exec site build
      - run:
          name: Publish GitHub Pages
          # working_directory: './_site'
          command: |
            if [ "${CIRCLE_BRANCH}" = "develop" ]; then
              echo -e "Starting to deploy to Github Pages\n"
              git config --global user.email "robots@circleci.com"
              git config --global user.name "CircleCI"
              stack exec site rebuild
              git checkout -b master --track origin/master
              echo "overwriting existing files with new files"
              cp -a _site/. .
              echo "adding files to git..."
              git add .
              git status
              echo "committing to git repo..."
              if git commit -m "publish $CIRCLE_SHA1 [ci skip]" ; then
                echo "git push files with force..."
                git push -fq https://${GH_TOKEN}@github.com/$TARGET_REPO master
                echo -e "deployment completed!\n"
              else
                echo "content not changed, nothing to deploy"
              fi
            else
              echo "Not master branch, dry run only"
            fi